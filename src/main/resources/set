本文主要介绍集合之间的区别:
1.Collection接口:
    List和Set的区别和联系:1.List和Set都实现了迭代器(Iterable)接口 2.List有序,可以重复,底层主要是用数组(Array)实现的;而Set无序.不能重复
底层主要是在HashMap的基础上实现的.
    1.1 List接口
    在考虑并发的情况下用Vector
    在不考虑并发的情况下用ArrayList
    经常用在增删操作较多而查询操作很少的情况下：队列和堆栈.队列：先进先出的数据结构;栈：后进先出的数据结构。
        1.1.1 ArrayList实现
            底层是Object数组,所以ArrayList具有数组的特点,查询速度快(数组索引),增删速度慢(涉及到数组的扩容)
            ArrayList是线性不安全的
        1.1.2 LinkList实现
            LinkList底层是一种双向循环链表.链表上的每个节点都有三部分组成:
                1.前指针(指向前一个节点的位置); 2.当前节点数据; 3.后指针(指向后一个节点的位置).最后一个节点的后指针指向第一个节点的前指针，形成一个循环。
            双向循环链表的查询速度慢(查询的时候要遍历整个链表),增删速度快(增加的数据只要让当前节点储存它的前后指针即可)
                LinkList是线性不安全的
        1.1.3 Vector实现
            Vector和ArrayList比较相似,区别是Vector是重量级的组件,消耗资源比较多
            Vector是线性安全的
    1.2 Set接口
        1.2.1 HashSet实现
        HashSet底层用的也是数组。
        当向数组中利用add(Object o)添加对象的时候，系统先找对象的hashCode：int hc=o.hashCode();返回的hashCode为整数值.HashSet底层是在HashMap的基础上实现的.HashSet的储存方式是将HashMap中的Key值作为HashSet的储存项,所以储存的数据是无序不能重复的,由哈奇表支持.
        1.2.2 TreeSet实现
            底层的数据结构是二叉树,它可以给Set集合中的元素进行指定方式的排序.
2.Map接口:
    Map是一种把键对象和值对象映射的集合,每个元素都包括一个键值对,键不能重复,值可以重复.
    1.HashMap实现
        实现了Map接口,HashMap可以让你将空值作为一个表的条目的key或value;HashMap是线性不安全的.
    2.HashTable实现
        继承自Dictionary,实现了Map接口;Hashtable是不能放入空值（null）的;HashTable是线性安全的.